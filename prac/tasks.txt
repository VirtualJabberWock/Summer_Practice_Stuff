Краткий список заданий
2.1 Замена текста (3/4).
2.2 Вывод файла в шестнадцатиричном виде (3/4).
2.3 Преобразование из числа в строку, из строки в число (3).
2.4 Генерация паролей (3/4).

3.1 Быстрая сортировка строк файла с использованием статического и динамического массивов (3/4).
3.2 Арифметика больших чисел (3/4).

4.1 Сортировка строк в двусвязном списке (3/4).
4.2 Ассоциативные массивы (3/4).

6.1 Обработка изображений (3/4).

7.1 Арифметика матриц (3/4).

8.1 Разбор языка вычислений с помощью регулярных выражений (3/4).



Требования на оценку 3.
Выполнить не менее пяти любых заданий.

Требования на оценку 4.
Выполнить не менее восьми заданий. Из них не менее пяти заданий с условием на оценку 4.

Требования на оценку 5.
Выполнить не менее девяти заданий с условием на оценку 4.
Дополнительно выполнить большое задание из представленных ниже.



Задания на оценку 5.
Каждое задание выбирает не более одного человека. Выбрать задание можно после сдачи трёх заданий.

1. На языке C реализовать простой редактор изображений.
Нельзя использовать сторонние библиотеки, только WinAPI.
Требования:
1) Поддержка форматов bmp, jpg, png (открытие, сохранение).
2) Выделение прямоугольных участков изображений с возможностью вырезания, копирования, вставки.
3) Рисование мышкой линий, прямых, прямоугольников с возможностью выбора цвета и толщины линии.
4) С помощью мышки увеличение/уменьшение размеров изображения.




2. На языке C реализовать шестнадцатиричный редактор файлов.
Нельзя использовать сторонние библиотеки, только WinAPI.
Необходимо реализовать компонент шестнадцатиричного редактора в виде отдельного окна, которое в качестве дочернего окна встраивается в приложение. Вся логика работы с редактированием шестнадцатиричного представления должна быть реализована в этом компоненте. Через оконные сообщения реализовать интерфейс, через который осуществляется настройка, загрузка данных в компонент, выгрузка отредактированных данных, уведомление о событиях.
Компонент реализуется полностью самостоятельно, нельзя использовать в качестве основы какие-то готовые окна. Символы можно отображать с помощью операции вывода текста на окне.
Данные отображаются в классическом виде: в каждой строке смещение, шестнадцатиричное представление байт, символьное представление байт (для которых это возможно).
Должна быть возможность указать компоненту фиксированное количество байт в строке и количество строк. Либо указать, что они высчитываются динамически из размера окна.
Должны поддерживаться функции:
1) Редактирование шестнадцатиричного и символьного представления.
2) Выделение участков шестнадцатиричного и символьного представления.
3) Операции вырезания, копирования, вставки (в шестнадцатиричном и символьном виде).
4) Поиск байт (в шестнадцатиричном и символьном виде).
5) Должна быть возможность работы с файлами произвольного размера. Т.е. полностью считывать файл в память нельзя.




3. На языке C реализовать текстовый редактор.
Нельзя использовать сторонние библиотеки, только WinAPI.
Необходимо реализовать компонент текстового редактора в виде отдельного окна, которое в качестве дочернего окна встраивается в приложение. Вся логика работы текстового редактора должна быть реализована в этом компоненте. Через оконные сообщения реализовать интерфейс, через который осуществляется настройка, загрузка данных в компонент, выгрузка отредактированных данных, уведомление о событиях.
Компонент реализуется полностью самостоятельно, нельзя использовать в качестве основы какие-то готовые окна.
По сути требуется реализовать упрощённую версию стандартного окна edit.
Вывод графического представления (глифа) символа осуществляется самостоятельно (по сути в виде отдельных пикселей) без использования системных функций вывода текста в окно. Т.е. надо сделать самостоятельный вывод некоторого своего шрифта.
Должны поддерживаться функции:
1) Отображение текста.
2) Редактирование (ввод, удаление, замена) текста.
3) Выделение текста клавиатурой и мышью.
4) Копирование, вставка, вырезание текста.
5) Поиск текста с подсвечиванием найденных фрагментов.



4. На языке C реализовать редактор электронных таблиц.
Нельзя использовать сторонние библиотеки, только WinAPI.
Необходимо реализовать компонент редактора в виде отдельного окна, которое в качестве дочернего окна встраивается в приложение. Вся логика работы редактора должна быть реализована в этом компоненте. Через оконные сообщения реализовать интерфейс, через который осуществляется настройка, загрузка данных в компонент, выгрузка отредактированных данных, уведомление о событиях.
Компонент реализуется полностью самостоятельно, нельзя использовать в качестве основы какие-то готовые окна. Символы можно отображать с помощью операции вывода текста на окне.
Должно поддерживаться открытие/сохранение файлов в формате csv и некотором своём формате (для реализации возможностей не предусмотренных простым форматом csv).
Должны поддерживаться функции:
1. Предоставление традиционного интерфейса по отображению и редактированию электронных таблиц.
2. Возможность выделения ячеек клавиатурой и мышью.
3. Копирование, вставка, вырезание данных в ячейках.
4. Изменение размеров ячеек с помощью мышки.
5. Поддержка формулы сложения заданных (клавиатурой, мышью, перечислением) ячеек в качестве значения для ячейки.



Возможные задания (требования для них пока не определены).

5. Реализация GUI-программы для просмотра шахматных партий (формат PGN) и игры человека с шахматным движком (по протоколу UCI).


6. Реализация шахматного движка с поддержкой протокола UCI.


7. Отображение графовой информации (возможно, использовать для визуализации компьютерных сетей).


8. Реализация простой базы данных и системы управления базой данных (СУБД). Предоставлять по сети интерфейс взаимодействия. Поддерживать ограниченный набор SQL-команд: создание базы, удаление базы, запрос данных, удаление данных, модификация данных.
